[main]
# This is the GPIO pin your 801s sensor is connected to
sensor_pin = 14

# Setting to disable console logging to avoid cluttering display (note console logging is useful when debugging setting up the sensor)
disable_console_logging = false

# Setting to enable detailed debugging messages to help with testing
detailed_debug_messages = true

# The monitor will think your appliane has started when it has detected vibrations for this many consecutive seconds
seconds_to_start = 10

# The monitor will think your appliane has finished when it has detected no vibrations for this many consecutive seconds
seconds_to_end = 90

# The message sent when your appliance has started (blank to send no message)
start_message = Dryer has started

# The message sent when your appliance has finished (blank to send no message)
end_message = Dryer has finished

# The message sent when your the monitor turns on (blank to send no message)
boot_message = Dryer bot is online

# Get your PushBullet API key from https://www.pushbullet.com/#settings/account
# (You can push to two different accounts here)
#o.H8KcL277I5jSygeCDN8kpxu6jNQFLmGu
[pushbullet]
device_name = VibrationBot
api_key = 
api_key2 = 

# Get your Twitter API keys from http://nodotcom.org/python-twitter-tutorial.html
# (Complete steps 1-4)
[twitter]
api_key = 
api_secret = 
access_token = 
access_token_secret = 

[slack]
#xoxb-238708548978-QDQafzvjR9XWeVcylIs92TxN
api_token = 
webhook_url =

# Create a new Applet in IFTT with a Maker channel as the if
# Open the settings to the Maker Item, and navigate to the URL to get
# key.  Make a new activity with the Maker channel and use the event you
# define
[iftt]
maker_channel_key =
maker_channel_event =

